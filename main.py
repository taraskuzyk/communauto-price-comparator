from trips import get_trips_cumulative_cost_using_plan, Trip
from plans import Plan, PLANS
from functools import partial


INVOICE_STRING = """
5881 415324 05/01 15:26 05/01 16:42 0 1.23 $21.30 7 $0.00 $0.00 $1.00 CDW $22.30 FLEX $0.00
5901 415324 05/02 11:56 05/02 12:30 0 0.55 $14.85 20 $0.00 $0.00 $1.00 CDW $15.85 FLEX $0.00
5901 415324 05/02 17:55 05/02 18:12 0 0.27 $7.20 5 $0.00 $0.00 $1.00 CDW $8.20 FLEX $0.00
5863 415324 05/06 13:27 05/06 16:04 0 2.37 $39.90 45 $0.00 $0.00 $1.00 CDW $40.90 FLEX $0.00
5900 415324 05/06 20:56 05/06 21:38 0 1 $15.00 28 $0.00 $0.00 $1.00 CDW $16.00 FLEX $0.00
5805 415324 05/11 16:58 05/11 17:04 0 0.08 $2.25 1 $0.00 $0.00 $1.00 CDW $3.25 FLEX $0.00
5805 415324 05/12 17:01 05/12 17:37 0 1 $15.00 24 $0.00 $0.00 $1.00 CDW $16.00 FLEX $0.00
5822 415324 05/12 19:31 05/12 20:06 0 0.55 $14.85 26 $0.00 $0.00 $1.00 CDW $15.85 FLEX $0.00
5892 415324 05/16 13:57 05/16 15:03 0 1.08 $17.25 12 $0.00 $0.00 $1.00 CDW $18.25 FLEX $0.00
5843 415324 05/17 17:44 05/17 17:51 0 0.1 $2.70 1 $0.00 $0.00 $1.00 CDW $3.70 FLEX $0.00
5949 415324 05/21 17:14 05/21 18:06 0 1 $15.00 29 $0.00 $0.00 $1.00 CDW $16.00 FLEX $0.00
5871 415324 05/22 16:44 05/22 18:12 0 1.45 $27.15 59 $0.00 $0.00 $1.00 CDW $28.15 FLEX $0.00
5871 415324 05/22 22:32 05/22 23:10 0 1 $15.00 28 $0.00 $0.00 $1.00 CDW $16.00 FLEX $0.00
5880 415324 05/26 14:12 05/26 14:18 0 0.08 $2.25 1 $0.00 $0.00 $1.00 CDW $3.25 FLEX $0.00
5831 415324 05/28 15:47 05/28 15:48 0 0 $0.00 0 $0.00 $0.00 $1.00 CDW $1.00 FLEX $0.00
5831 415324 05/28 15:49 05/28 16:50 0 1.02 $15.45 32 $0.00 $0.00 $1.00 CDW $16.45 FLEX $0.00
5888 415324 05/28 22:55 05/28 23:30 0 1 $15.00 27 $0.00 $0.00 $1.00 CDW $16.00 FLEX $0.00
5888 415324 05/29 14:57 05/29 15:01 0 0.03 $0.90 0 $0.00 $0.00 $1.00 CDW $1.90 FLEX $0.00
5888 415324 05/29 15:23 05/29 15:29 0 0.1 $2.70 2 $0.00 $0.00 $1.00 CDW $3.70 FLEX $0.00
5804 415324 05/29 15:31 05/29 15:52 0 0.33 $9.00 8 $0.00 $0.00 $1.00 CDW $10.00 FLEX $0.00
5855 415324 05/30 11:36 05/30 15:37 1 0 $50.00 53 $0.00 $0.00 $1.00 CDW $51.00 FLEX $0.00
"""


if __name__ == '__main__':
    lines = INVOICE_STRING.split("\n")
    trips = []
    for line in lines:
        try:
            trip = Trip.from_invoice_line(line)
        except ValueError:
            print(line)
            continue

        trips.append(trip)

    def get_these_trips_cost_using_plan(plan: Plan) -> float:
        return get_trips_cumulative_cost_using_plan(trips, plan)


    for plan_id, plan in PLANS.items():

        cost = get_these_trips_cost_using_plan(plan)
        print(f"{plan.name}: ${cost:.2f}")

